class Solution {
    public int singleNumber(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for (int i = 0; i < nums.length; ++i) {
            if (set.contains(nums[i])) { 
                set.remove(nums[i]);
            }
            else {            
                set.add(nums[i]);
            }
        }
        for (int answer: set){
            return answer;
        }
        return 0;
    }
}

class Solution {
    public int singleNumber(int[] nums) {
    int unique = 0;
    for (int num : nums) {
      unique ^= num;
    }
    return unique;
    }
}
// 4,1,2,1,2

// 8 4 2 1 
// 0 0 0 0
    
// 0 1 0 0 = 4
// 0 0 0 1 = 1
// 0 1 0 1 = 5

// 0 1 0 1 = 5
// 0 0 1 0 = 2
// 0 1 1 1 = 7

// 0 1 1 1 = 7
// 0 0 0 1 = 1
// 0 1 1 0 = 6
    
// 0 1 1 0 = 6
// 0 0 1 0 = 2
// 0 1 0 0 = 4

